#include <iostream>
using namespace std;

/*
Altere o exercício anterior para que, após o término de todos os cadastros, ou seja, quando
o usuário digitar "N" na pergunta para novo cliente ou quando preencher o vetor com 20
clientes, a tela seja ser limpa e seja exibida uma nova tela perguntando se o usuário quer ver
um relatório ou consultar um cliente individualmente. Se ele desejar ver o relatório, o
sistema deverá exibi-lo conforme questão anterior. Se ele escolher consultar um cliente
individualmente, o sistema deverá solicitar a identidade do cliente procurado, fazer uma
busca no vetor e informar seus dados caso o cliente esteja cadastrado. Se não existir cliente
cadastrado com aquela identidade, o sistema deverá informar “Cliente não cadastrado”. 
*/

struct Clientes{
	int cpf;
	string nome;
	string endereco;
	int telefone;
};

int main(){
	const int tam = 20;
	int i = 0, i3 = 0, op, cpf2, i2;
	bool achou = false;
	char continuar;
	Clientes vclientes[tam];
	
	do{
		cout << "\n\tPreenchimento de dados dos clientes " << i + 1 << " (o maximo de cliente e " << tam << "): ";
		cout << "\n\tCPF: ";
		cin >> vclientes[i].cpf;
		getchar();
		cout << "\tNome: ";
		getline(cin, vclientes[i].nome);
		cout << "\tEndereco: ";
		getline(cin, vclientes[i].endereco);
		cout << "\tTelefone: ";
		cin >> vclientes[i].telefone;
		cout << "\tNovo cliente(S/N)?: ";
		cin >> continuar;
		i++;
		i3++;	
	}while((!((continuar == 'N')||(continuar == 'n'))&&(i != tam)));
	system("cls");
	do{
		cout << "\n\t\tMenu principal";
		cout << "\n\t1 - Relatorio dos clientes";
		cout << "\n\t2 - Consultar cliente";
		cout << "\n\t3 - Sair";
		cout << "\n\tDigite uma opcao: ";
		cin >> op;
		if(op <= 0 || op > 3){
			cout << "\tOpcao invalida!";
			cout << "\n";
			system("pause");
			system("cls");
		}
		switch(op){
			case 1:
				for(i2 = 0; i2 < i3; i2++){
					cout << "\n\tDados do cliente " << i2 + 1;
					cout << "\n\tCPF: " << vclientes[i2].cpf;
					cout << "\n\tNome: " << vclientes[i2].nome;
					cout << "\n\tEndereco: " << vclientes[i2].endereco;
					cout << "\n\tTelefone: " << vclientes[i2].telefone;
				}
				cout << "\n";
				system("pause");
				system("cls");
			break;   
			case 2:
				cout << "\tDigite o CPF que sera consultado: ";
				cin >> cpf2;
				for(i2 = 0; i2 < i3; i2++){
					if(cpf2 == vclientes[i2].cpf){
						achou = true;
						cout << "\tDados do cliente de CPF: " << cpf2;
						cout << "\n\tNome: " << vclientes[i2].nome;
						cout << "\n\tEndereco: " << vclientes[i2].endereco;
						cout << "\n\tTelefone: " << vclientes[i2].telefone;  		
					}
				}
				if(achou == false){
					cout << "\tCPF nao encontrado!";
				}
				cout << "\n";
				system("pause");
				system("cls");
				break;
			case 3:
				cout << "\n\tPrograma finalizado!";
			break;
		}
	}while(op != 3);		
}
